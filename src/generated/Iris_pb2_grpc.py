# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import Iris_pb2 as Iris__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class TestServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PutMessage = channel.unary_unary(
                '/Iris.TestService/PutMessage',
                request_serializer=Iris__pb2.DataBuffer.SerializeToString,
                response_deserializer=Iris__pb2.StatusCode.FromString,
                )
        self.GetMessage = channel.unary_unary(
                '/Iris.TestService/GetMessage',
                request_serializer=Iris__pb2.SocketInfo.SerializeToString,
                response_deserializer=Iris__pb2.DataBuffer.FromString,
                )
        self.SetNetworkParameters = channel.unary_unary(
                '/Iris.TestService/SetNetworkParameters',
                request_serializer=Iris__pb2.NetworkParameters.SerializeToString,
                response_deserializer=Iris__pb2.StatusCode.FromString,
                )
        self.Kill = channel.unary_unary(
                '/Iris.TestService/Kill',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.CreateSocket = channel.unary_unary(
                '/Iris.TestService/CreateSocket',
                request_serializer=Iris__pb2.SocketInfo.SerializeToString,
                response_deserializer=Iris__pb2.StatusCode.FromString,
                )
        self.DestroySocket = channel.unary_unary(
                '/Iris.TestService/DestroySocket',
                request_serializer=Iris__pb2.SocketInfo.SerializeToString,
                response_deserializer=Iris__pb2.StatusCode.FromString,
                )
        self.GetVersion = channel.unary_unary(
                '/Iris.TestService/GetVersion',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=Iris__pb2.VersionInfo.FromString,
                )


class TestServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def PutMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetNetworkParameters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Kill(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSocket(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DestroySocket(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TestServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PutMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.PutMessage,
                    request_deserializer=Iris__pb2.DataBuffer.FromString,
                    response_serializer=Iris__pb2.StatusCode.SerializeToString,
            ),
            'GetMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMessage,
                    request_deserializer=Iris__pb2.SocketInfo.FromString,
                    response_serializer=Iris__pb2.DataBuffer.SerializeToString,
            ),
            'SetNetworkParameters': grpc.unary_unary_rpc_method_handler(
                    servicer.SetNetworkParameters,
                    request_deserializer=Iris__pb2.NetworkParameters.FromString,
                    response_serializer=Iris__pb2.StatusCode.SerializeToString,
            ),
            'Kill': grpc.unary_unary_rpc_method_handler(
                    servicer.Kill,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'CreateSocket': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSocket,
                    request_deserializer=Iris__pb2.SocketInfo.FromString,
                    response_serializer=Iris__pb2.StatusCode.SerializeToString,
            ),
            'DestroySocket': grpc.unary_unary_rpc_method_handler(
                    servicer.DestroySocket,
                    request_deserializer=Iris__pb2.SocketInfo.FromString,
                    response_serializer=Iris__pb2.StatusCode.SerializeToString,
            ),
            'GetVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVersion,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=Iris__pb2.VersionInfo.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Iris.TestService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TestService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def PutMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Iris.TestService/PutMessage',
            Iris__pb2.DataBuffer.SerializeToString,
            Iris__pb2.StatusCode.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Iris.TestService/GetMessage',
            Iris__pb2.SocketInfo.SerializeToString,
            Iris__pb2.DataBuffer.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetNetworkParameters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Iris.TestService/SetNetworkParameters',
            Iris__pb2.NetworkParameters.SerializeToString,
            Iris__pb2.StatusCode.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Kill(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Iris.TestService/Kill',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateSocket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Iris.TestService/CreateSocket',
            Iris__pb2.SocketInfo.SerializeToString,
            Iris__pb2.StatusCode.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DestroySocket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Iris.TestService/DestroySocket',
            Iris__pb2.SocketInfo.SerializeToString,
            Iris__pb2.StatusCode.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Iris.TestService/GetVersion',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            Iris__pb2.VersionInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class NetPipeStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PutMessage = channel.unary_unary(
                '/Iris.NetPipe/PutMessage',
                request_serializer=Iris__pb2.DataBuffer.SerializeToString,
                response_deserializer=Iris__pb2.StatusCode.FromString,
                )


class NetPipeServicer(object):
    """Missing associated documentation comment in .proto file."""

    def PutMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NetPipeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PutMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.PutMessage,
                    request_deserializer=Iris__pb2.DataBuffer.FromString,
                    response_serializer=Iris__pb2.StatusCode.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Iris.NetPipe', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class NetPipe(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def PutMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Iris.NetPipe/PutMessage',
            Iris__pb2.DataBuffer.SerializeToString,
            Iris__pb2.StatusCode.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
